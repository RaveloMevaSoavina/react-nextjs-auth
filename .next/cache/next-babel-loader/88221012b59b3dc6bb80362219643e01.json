{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { query as q } from 'faunadb';\nimport cookie from 'cookie';\nimport { faunaClient, FAUNA_SECRET_COOKIE } from '../../utils/fauna-auth';\nexport var profileApi = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(faunaSecret) {\n    var ref;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return faunaClient(faunaSecret).query(q.Identity());\n\n          case 2:\n            ref = _context.sent;\n            return _context.abrupt(\"return\", ref.id);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function profileApi(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default /*#__PURE__*/(function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$headers$cookie;\n\n    var cookies, faunaSecret;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            cookies = cookie.parse((_req$headers$cookie = req.headers.cookie) !== null && _req$headers$cookie !== void 0 ? _req$headers$cookie : '');\n            faunaSecret = cookies[FAUNA_SECRET_COOKIE];\n\n            if (faunaSecret) {\n              _context2.next = 4;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", res.status(401).send('Auth cookie missing.'));\n\n          case 4:\n            _context2.t0 = res.status(200);\n            _context2.next = 7;\n            return profileApi(faunaSecret);\n\n          case 7:\n            _context2.t1 = _context2.sent;\n            _context2.t2 = {\n              userId: _context2.t1\n            };\n\n            _context2.t0.json.call(_context2.t0, _context2.t2);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n})();","map":{"version":3,"sources":["/Users/Nick/Documents/ServeVue/react-auth/with-cookie-auth-fauna/pages/api/profile.js"],"names":["query","q","cookie","faunaClient","FAUNA_SECRET_COOKIE","profileApi","faunaSecret","Identity","ref","id","req","res","cookies","parse","headers","status","send","userId","json"],"mappings":";;AAAA,SAASA,KAAK,IAAIC,CAAlB,QAA2B,SAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,EAAsBC,mBAAtB,QAAiD,wBAAjD;AAEA,OAAO,IAAMC,UAAU;AAAA,sEAAG,iBAAMC,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACNH,WAAW,CAACG,WAAD,CAAX,CAAyBN,KAAzB,CAA+BC,CAAC,CAACM,QAAF,EAA/B,CADM;;AAAA;AAClBC,YAAAA,GADkB;AAAA,6CAEjBA,GAAG,CAACC,EAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVJ,UAAU;AAAA;AAAA;AAAA,GAAhB;AAKP;AAAA,uEAAe,kBAAOK,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,OADO,GACGV,MAAM,CAACW,KAAP,wBAAaH,GAAG,CAACI,OAAJ,CAAYZ,MAAzB,qEAAmC,EAAnC,CADH;AAEPI,YAAAA,WAFO,GAEOM,OAAO,CAACR,mBAAD,CAFd;;AAAA,gBAIRE,WAJQ;AAAA;AAAA;AAAA;;AAAA,8CAKJK,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,sBAArB,CALI;;AAAA;AAAA,2BAQbL,GAAG,CAACI,MAAJ,CAAW,GAAX,CARa;AAAA;AAAA,mBAQwBV,UAAU,CAACC,WAAD,CARlC;;AAAA;AAAA;AAAA;AAQUW,cAAAA,MARV;AAAA;;AAAA,yBAQGC,IARH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { query as q } from 'faunadb'\nimport cookie from 'cookie'\nimport { faunaClient, FAUNA_SECRET_COOKIE } from '../../utils/fauna-auth'\n\nexport const profileApi = async faunaSecret => {\n  const ref = await faunaClient(faunaSecret).query(q.Identity())\n  return ref.id\n}\n\nexport default async (req, res) => {\n  const cookies = cookie.parse(req.headers.cookie ?? '')\n  const faunaSecret = cookies[FAUNA_SECRET_COOKIE]\n\n  if (!faunaSecret) {\n    return res.status(401).send('Auth cookie missing.')\n  }\n\n  res.status(200).json({ userId: await profileApi(faunaSecret) })\n}\n"]},"metadata":{},"sourceType":"module"}