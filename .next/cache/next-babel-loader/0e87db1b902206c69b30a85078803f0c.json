{"ast":null,"code":"import { query as q } from 'faunadb';\nimport { serverClient, serializeFaunaCookie } from '../../utils/fauna-auth';\nexport default (async (req, res) => {\n  const {\n    email,\n    password\n  } = await req.body;\n\n  try {\n    if (!email || !password) {\n      throw new Error('Email and password must be provided.');\n    }\n\n    console.log({\n      email,\n      password\n    });\n    const loginRes = await serverClient.query(q.Login(q.Match(q.Index('users_by_email'), email), {\n      password\n    }));\n\n    if (!loginRes.secret) {\n      throw new Error('No secret present in login query response.');\n    }\n\n    const cookieSerialized = serializeFaunaCookie(loginRes.secret);\n    res.setHeader('Set-Cookie', cookieSerialized);\n    res.status(200).end();\n  } catch (error) {\n    res.status(400).send(error.message);\n  }\n});","map":{"version":3,"sources":["/Users/Nick/Documents/ServeVue/react-auth/with-cookie-auth-fauna/pages/api/login.js"],"names":["query","q","serverClient","serializeFaunaCookie","req","res","email","password","body","Error","console","log","loginRes","Login","Match","Index","secret","cookieSerialized","setHeader","status","end","error","send","message"],"mappings":"AAAA,SAASA,KAAK,IAAIC,CAAlB,QAA2B,SAA3B;AACA,SAASC,YAAT,EAAuBC,oBAAvB,QAAmD,wBAAnD;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsB,MAAMH,GAAG,CAACI,IAAtC;;AAEA,MAAI;AACF,QAAI,CAACF,KAAD,IAAU,CAACC,QAAf,EAAyB;AACvB,YAAM,IAAIE,KAAJ,CAAU,sCAAV,CAAN;AACD;;AAEDC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACL,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAZ;AAEA,UAAMK,QAAQ,GAAG,MAAMV,YAAY,CAACF,KAAb,CACrBC,CAAC,CAACY,KAAF,CAAQZ,CAAC,CAACa,KAAF,CAAQb,CAAC,CAACc,KAAF,CAAQ,gBAAR,CAAR,EAAmCT,KAAnC,CAAR,EAAmD;AACjDC,MAAAA;AADiD,KAAnD,CADqB,CAAvB;;AAMA,QAAI,CAACK,QAAQ,CAACI,MAAd,EAAsB;AACpB,YAAM,IAAIP,KAAJ,CAAU,4CAAV,CAAN;AACD;;AAED,UAAMQ,gBAAgB,GAAGd,oBAAoB,CAACS,QAAQ,CAACI,MAAV,CAA7C;AAEAX,IAAAA,GAAG,CAACa,SAAJ,CAAc,YAAd,EAA4BD,gBAA5B;AACAZ,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,GAAhB;AACD,GArBD,CAqBE,OAAOC,KAAP,EAAc;AACdhB,IAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBG,IAAhB,CAAqBD,KAAK,CAACE,OAA3B;AACD;AACF,CA3BD","sourcesContent":["import { query as q } from 'faunadb'\nimport { serverClient, serializeFaunaCookie } from '../../utils/fauna-auth'\n\nexport default async (req, res) => {\n  const { email, password } = await req.body\n\n  try {\n    if (!email || !password) {\n      throw new Error('Email and password must be provided.')\n    }\n\n    console.log({email, password});\n\n    const loginRes = await serverClient.query(\n      q.Login(q.Match(q.Index('users_by_email'), email), {\n        password,\n      })\n    )\n\n    if (!loginRes.secret) {\n      throw new Error('No secret present in login query response.')\n    }\n\n    const cookieSerialized = serializeFaunaCookie(loginRes.secret)\n\n    res.setHeader('Set-Cookie', cookieSerialized)\n    res.status(200).end()\n  } catch (error) {\n    res.status(400).send(error.message)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}